// ////////////////////////////////////////////////////////
// # Title
// Even Fibonacci numbers:

// # Problem
// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.

#include <iostream>

size_t fibonacci_recursive_method (size_t);
size_t even_fibonacci_numbers (const size_t&);

int main() {
    size_t limit = 4000000;
    
    std::cout << even_fibonacci_numbers(limit) << std::endl;

    return 0;
}

size_t fibonacci_recursive_method (size_t n) {
    if (n == 1) {
        return 1;
    }else if (n == 2) {
        return 2;
    }else if (n > 2) {
        return fibonacci_recursive_method (n-1) + fibonacci_recursive_method (n-2);
    }
    return 0;
}

size_t even_fibonacci_numbers (const size_t& limit) {
    size_t sum {};
    
    for(size_t i = 1; fibonacci_recursive_method (i) < limit; ++i) {
        if(fibonacci_recursive_method (i) % 2 == 0){
            sum += fibonacci_recursive_method (i) ;
        }
    }
    return sum;
}